<?xml version="1.0" encoding="UTF-8"?>

<!--  通用空间数据关系函数 测试用例  -->
<testCase>
    <resultXml>stDataRelation_result.xml</resultXml>
    <!--  传入两个地理元素，判断geom1,geom2是否完全一致  st_equals(geom1: Geometry, geom2: Geometry): Boolean  -->
    <case>
        <sql type="query">select st_equals(?, ?);</sql>
        <arguments resultID="1">[st_makePoint(1,2)][st_makePoint(1,2)]</arguments>
        <arguments resultID="2">[st_makePoint(1,2)][st_makePoint(1,3)]</arguments>
        <arguments resultID="3">[st_geomFromWkt('LINESTRING(0 1,2 3)')][st_geomFromWkt('LINESTRING(0 1,1 2)')]</arguments>
        <arguments resultID="4">[st_geomFromWkt('LINESTRING(0 1,2 3)')][st_geomFromWkt('LINESTRING(0 1,3 4)')]</arguments>
        <arguments resultID="5">[st_makeBBox(0.0,0.0,4.0,4.0)][st_makeBBox(0.0,0.0,4.0,4.0)]</arguments>
        <arguments resultID="6">[st_makeBBox(0.0,0.0,4.0,4.0)][st_makeBBox(0.0,0.0,5.0,5.0)]</arguments>
        <arguments resultID="7">[null][null]</arguments>
    </case>
    <!--  传入两个地理元素，判断geom1是否包含geom2  st_contains(geom1: Geometry, geom2: Geometry): Boolean  -->
    <case>
        <sql type="query">select st_contains(?, ?);</sql>
        <arguments resultID="8">[st_makePoint(1,2)][st_makePoint(1,2)]</arguments>
        <arguments resultID="9">[st_makePoint(1,2)][st_makePoint(1,3)]</arguments>
        <arguments resultID="10">[st_geomFromWkt('LINESTRING(0 1,2 3)')][st_makePoint(1,2)]</arguments>
        <arguments resultID="11">[st_geomFromWkt('LINESTRING(0 1,2 3)')][st_makePoint(1,3)]</arguments>
        <arguments resultID="12">[st_geomFromWkt('LINESTRING(0 1,2 3)')][st_geomFromWkt('LINESTRING(0 1,1 2)')]</arguments>
        <arguments resultID="13">[st_geomFromWkt('LINESTRING(0 1,2 3)')][st_geomFromWkt('LINESTRING(0 1,3 3)')]</arguments>
        <arguments resultID="14">[st_makeBBox(0.0,0.0,4.0,4.0)][st_makePoint(1,2)]</arguments>
        <arguments resultID="15">[st_makeBBox(0.0,0.0,4.0,4.0)][st_makePoint(4,5)]</arguments>
        <arguments resultID="16">[st_makeBBox(0.0,0.0,4.0,4.0)][st_geomFromWkt('LINESTRING(0 1,2 3)')]</arguments>
        <arguments resultID="17">[st_makeBBox(0.0,0.0,4.0,4.0)][st_geomFromWkt('LINESTRING(0 0,4 4)')]</arguments>
        <arguments resultID="18">[st_makeBBox(0.0,0.0,4.0,4.0)][st_makeBBox(0.0,0.0,4.0,4.0)]</arguments>
        <arguments resultID="19">[st_makeBBox(0.0,0.0,4.0,4.0)][st_makeBBox(0.0,0.0,5.0,5.0)]</arguments>
        <arguments resultID="20">[null][null]</arguments>
    </case>
    <!--  传入两个地理元素，判断geom1是否覆盖geom2  st_covers(geom1: Geometry, geom2: Geometry): Boolean  -->
    <case>
        <sql type="query">select st_covers(?, ?);</sql>
        <arguments resultID="21">[st_makePoint(1,2)][st_makePoint(1,2)]</arguments>
        <arguments resultID="22">[st_makePoint(1,2)][st_makePoint(1,3)]</arguments>
        <arguments resultID="23">[st_geomFromWkt('LINESTRING(0 1,2 3)')][st_makePoint(1,2)]</arguments>
        <arguments resultID="24">[st_geomFromWkt('LINESTRING(0 1,2 3)')][st_makePoint(1,3)]</arguments>
        <arguments resultID="25">[st_geomFromWkt('LINESTRING(0 1,2 3)')][st_geomFromWkt('LINESTRING(0 1,1 2)')]</arguments>
        <arguments resultID="26">[st_geomFromWkt('LINESTRING(0 1,2 3)')][st_geomFromWkt('LINESTRING(0 1,3 3)')]</arguments>
        <arguments resultID="27">[st_makeBBox(0.0,0.0,4.0,4.0)][st_makePoint(1,2)]</arguments>
        <arguments resultID="28">[st_makeBBox(0.0,0.0,4.0,4.0)][st_makePoint(4,4)]</arguments>
        <arguments resultID="29">[st_makeBBox(0.0,0.0,4.0,4.0)][st_geomFromWkt('LINESTRING(0 1,2 3)')]</arguments>
        <arguments resultID="30">[st_makeBBox(0.0,0.0,4.0,4.0)][st_geomFromWkt('LINESTRING(0 0,4 4)')]</arguments>
        <arguments resultID="31">[st_makeBBox(0.0,0.0,4.0,4.0)][st_makeBBox(0.0,0.0,4.0,4.0)]</arguments>
        <arguments resultID="32">[st_makeBBox(0.0,0.0,4.0,4.0)][st_makeBBox(0.0,0.0,5.0,5.0)]</arguments>
        <arguments resultID="33">[null][null]</arguments>
    </case>
    <!--  传入两个地理元素，判断geom1是否横跨geom2  st_crosses(geom1: Geometry, geom2: Geometry): Boolean  -->
    <case>
        <sql type="query">select st_crosses(?, ?);</sql>
        <arguments resultID="34">[st_makePoint(1,2)][st_makePoint(1,2)]</arguments>
        <arguments resultID="35">[st_makePoint(1,2)][st_geomFromWkt('LINESTRING(0 1,2 3)')]</arguments>
        <arguments resultID="36">[st_makePoint(1,2)][st_makeBBox(0.0,0.0,4.0,4.0)]</arguments>
        <arguments resultID="37">[st_geomFromWkt('LINESTRING(0 1,2 3)')][st_geomFromWkt('LINESTRING(0 0,2 4)')]</arguments>
        <arguments resultID="38">[st_geomFromWkt('LINESTRING(0 1,2 3)')][st_geomFromWkt('LINESTRING(0 2,2 4)')]</arguments>
        <arguments resultID="39">[st_geomFromWkt('LINESTRING(0 1,4 5)')][st_makeBBox(0.0,0.0,4.0,4.0)]</arguments>
        <arguments resultID="40">[st_geomFromWkt('LINESTRING(0 1,2 3)')][st_makeBBox(0.0,0.0,4.0,4.0)]</arguments>
        <arguments resultID="41">[st_makeBBox(0.0,0.0,4.0,4.0)][st_makeBBox(0.0,0.0,5.0,5.0)]</arguments>
        <arguments resultID="42">[null][null]</arguments>
    </case>
    <!--  传入两个地理元素，判断geom1是否与geom2相离  st_disjoint(geom1: Geometry, geom2: Geometry)  -->
    <case>
        <sql type="query">select st_disjoint(?, ?);</sql>
        <arguments resultID="43">[st_makePoint(1,2)][st_makePoint(1,2)]</arguments>
        <arguments resultID="44">[st_makePoint(1,2)][st_makePoint(3,4)]</arguments>
        <arguments resultID="45">[st_makePoint(1,2)][st_geomFromWkt('LINESTRING(0 1,2 3)')]</arguments>
        <arguments resultID="46">[st_makePoint(1,3)][st_geomFromWkt('LINESTRING(0 1,2 3)')]</arguments>
        <arguments resultID="47">[st_makePoint(1,2)][st_makeBBox(0.0, 0.0, 4.0, 4.0)]</arguments>
        <arguments resultID="48">[st_makePoint(4,5)][st_makeBBox(0.0, 0.0, 4.0, 4.0)]</arguments>
        <arguments resultID="49">[st_geomFromWkt('LINESTRING(0 1,2 3)')][st_geomFromWkt('LINESTRING(0 0,2 4)')]</arguments>
        <arguments resultID="50">[st_geomFromWkt('LINESTRING(0 1,2 3)')][st_geomFromWkt('LINESTRING(0 2,2 4)')]</arguments>
        <arguments resultID="51">[st_geomFromWkt('LINESTRING(0 1,2 3)')][st_makeBBox(0.0, 0.0, 4.0, 4.0)]</arguments>
        <arguments resultID="52">[st_geomFromWkt('LINESTRING(0 1,2 3)')][st_makeBBox(3.0, 3.0, 4.0, 4.0)]</arguments>
        <arguments resultID="53">[st_makeBBox(0.0, 0.0, 4.0, 4.0)][st_makeBBox(0.0, 0.0, 3.0, 3.0)]</arguments>
        <arguments resultID="54">[st_makeBBox(0.0, 0.0, 4.0, 4.0)][st_makeBBox(4.5, 4.5, 5.0, 5.0)]</arguments>
        <arguments resultID="55">[null][null]</arguments>
    </case>
    <!--  传入两个地理元素，判断geom1与geom2是否相交  st_intersects(geom1: Geometry, geom2: Geometry): Boolean  -->
    <case>
        <sql type="query">select st_intersects(?, ?);</sql>
        <arguments resultID="56">[st_makePoint(1,2)][st_makePoint(1,2)]</arguments>
        <arguments resultID="57">[st_makePoint(1,2)][st_makePoint(3,4)]</arguments>
        <arguments resultID="58">[st_makePoint(1,2)][st_geomFromWkt('LINESTRING(0 1,2 3)')]</arguments>
        <arguments resultID="59">[st_makePoint(1,3)][st_geomFromWkt('LINESTRING(0 1,2 3)')]</arguments>
        <arguments resultID="60">[st_makePoint(1,2)][st_makeBBox(0.0, 0.0, 4.0, 4.0)]</arguments>
        <arguments resultID="61">[st_makePoint(4,5)][st_makeBBox(0.0, 0.0, 4.0, 4.0)]</arguments>
        <arguments resultID="62">[st_geomFromWkt('LINESTRING(0 1,2 3)')][st_geomFromWkt('LINESTRING(0 0,2 4)')]</arguments>
        <arguments resultID="63">[st_geomFromWkt('LINESTRING(0 1,2 3)')][st_geomFromWkt('LINESTRING(0 2,2 4)')]</arguments>
        <arguments resultID="64">[st_geomFromWkt('LINESTRING(0 1,2 3)')][st_makeBBox(0.0, 0.0, 4.0, 4.0)]</arguments>
        <arguments resultID="65">[st_geomFromWkt('LINESTRING(0 1,2 3)')][st_makeBBox(3.0, 3.0, 4.0, 4.0)]</arguments>
        <arguments resultID="66">[st_makeBBox(0.0, 0.0, 4.0, 4.0)][st_makeBBox(0.0, 0.0, 3.0, 3.0)]</arguments>
        <arguments resultID="67">[st_makeBBox(0.0, 0.0, 4.0, 4.0)][st_makeBBox(4.5, 4.5, 5.0, 5.0)]</arguments>
        <arguments resultID="68">[null][null]</arguments>
    </case>
    <!--  传入两个地理元素，判断geom1与geom2是否有触及，即边界是否有重合  st_touches(geom1: Geometry, geom2: Geometry): Boolean  -->
    <case>
        <sql type="query">select st_touches(?, ?);</sql>
        <arguments resultID="69">[st_makePoint(1,2)][st_makePoint(1,2)]</arguments>
        <arguments resultID="70">[st_makePoint(0,1)][st_geomFromWkt('LINESTRING(0 1,2 3)')]</arguments>
        <arguments resultID="71">[st_makePoint(1,2)][st_geomFromWkt('LINESTRING(0 1,2 3)')]</arguments>
        <arguments resultID="72">[st_makePoint(4,4)][st_makeBBox(0.0, 0.0, 4.0, 4.0)]</arguments>
        <arguments resultID="73">[st_makePoint(4,5)][st_makeBBox(0.0, 0.0, 4.0, 4.0)]</arguments>
        <arguments resultID="74">[st_geomFromWkt('LINESTRING(0 1,2 3)')][st_geomFromWkt('LINESTRING(1 2,2 2)')]</arguments>
        <arguments resultID="75">[st_geomFromWkt('LINESTRING(0 1,2 3)')][st_geomFromWkt('LINESTRING(0 2,2 4)')]</arguments>
        <arguments resultID="76">[st_geomFromWkt('LINESTRING(0 4,1 5)')][st_makeBBox(0.0, 0.0, 4.0, 4.0)]</arguments>
        <arguments resultID="77">[st_geomFromWkt('LINESTRING(0 1,2 3)')][st_makeBBox(0.0, 0.0, 4.0, 4.0)]</arguments>
        <arguments resultID="78">[st_makeBBox(4.0, 4.0, 8.0, 8.0)][st_makeBBox(0.0, 0.0, 4.0, 4.0)]</arguments>
        <arguments resultID="79">[st_makeBBox(0.0, 0.0, 3.0, 3.0)][st_makeBBox(0.0, 0.0, 4.0, 4.0)]</arguments>
        <arguments resultID="80">[null][null]</arguments>
    </case>
    <!--  传入两个地理元素，判断geom1是否完全在geom2中  st_within(geom1: Geometry, geom2: Geometry): Boolean  -->
    <case>
        <sql type="query">select st_within(?, ?);</sql>
        <arguments resultID="81">[st_makePoint(1,2)][st_makePoint(1,2)]</arguments>
        <arguments resultID="82">[st_makePoint(1,2)][st_geomFromWkt('LINESTRING(0 1,2 3)')]</arguments>
        <arguments resultID="83">[st_makePoint(1,3)][st_geomFromWkt('LINESTRING(0 1,2 3)')]</arguments>
        <arguments resultID="84">[st_makePoint(3,3)][st_makeBBox(0.0, 0.0, 4.0, 4.0)]</arguments>
        <arguments resultID="85">[st_makePoint(4,4)][st_makeBBox(0.0, 0.0, 4.0, 4.0)]</arguments>
        <arguments resultID="86">[st_geomFromWkt('LINESTRING(0 1,2 3)')][st_geomFromWkt('LINESTRING(0 1,3 4)')]</arguments>
        <arguments resultID="87">[st_geomFromWkt('LINESTRING(0 1,2 3)')][st_geomFromWkt('LINESTRING(0 1,2 4)')]</arguments>
        <arguments resultID="88">[st_geomFromWkt('LINESTRING(0 1,2 3)')][st_makeBBox(0.0, 0.0, 4.0, 4.0)]</arguments>
        <arguments resultID="89">[st_geomFromWkt('LINESTRING(0 1,4 5)')][st_makeBBox(0.0, 0.0, 4.0, 4.0)]</arguments>
        <arguments resultID="90">[st_makeBBox(0.0, 0.0, 3.0, 3.0)][st_makeBBox(0.0, 0.0, 4.0, 4.0)]</arguments>
        <arguments resultID="91">[st_makeBBox(0.0, 0.0, 5.0, 5.0)][st_makeBBox(0.0, 0.0, 4.0, 4.0)]</arguments>
        <arguments resultID="92">[null][null]</arguments>
    </case>
    <!--  传入两个地理元素，判断geom1是否与geom2有重叠  st_overlaps(geom1: Geometry, geom2: Geometry): Boolean  -->
    <case>
        <sql type="query">select st_overLaps(?, ?);</sql>
        <arguments resultID="93">[st_makePoint(1,2)][st_makePoint(1,2)]</arguments>
        <arguments resultID="94">[st_makePoint(1,2)][st_geomFromWkt('LINESTRING(0 1,2 3)')]</arguments>
        <arguments resultID="95">[st_makePoint(3,3)][st_makeBBox(0.0, 0.0, 4.0, 4.0)]</arguments>
        <arguments resultID="96">[st_geomFromWkt('LINESTRING(0 1,2 3)')][st_geomFromWkt('LINESTRING(1 2,3 4)')]</arguments>
        <arguments resultID="97">[st_geomFromWkt('LINESTRING(0 1,2 3)')][st_geomFromWkt('LINESTRING(2 3,3 4)')]</arguments>
        <arguments resultID="98">[st_geomFromWkt('LINESTRING(0 1,2 3)')][st_makeBBox(0.0, 0.0, 4.0, 4.0)]</arguments>
        <arguments resultID="99">[st_makeBBox(0.0, 0.0, 3.0, 3.0)][st_makeBBox(2.0, 2.0, 4.0, 4.0)]</arguments>
        <arguments resultID="100">[st_makeBBox(0.0, 0.0, 3.0, 3.0)][st_makeBBox(3.0, 3.0, 5.0, 5.0)]</arguments>
        <arguments resultID="101">[null][null]</arguments>
    </case>
    <!--  返回DE-9IM的3×3的交互矩阵，其用来描述两个几何a、b内部，边界，外部的交点的维度  st_relate(a: Geometry, b: Geometry): String  -->
    <case>
        <sql type="query">select st_relate(?, ?);</sql>
        <arguments resultID="102">[st_makePoint(1,2)][st_makePoint(3,4)]</arguments>
        <arguments resultID="103">[st_makePoint(1,2)][st_geomFromWkt('LINESTRING(0 1,2 3)')]</arguments>
        <arguments resultID="104">[st_makePoint(3,3)][st_makeBBox(0.0, 0.0, 4.0, 4.0)]</arguments>
        <arguments resultID="105">[st_geomFromWkt('LINESTRING(0 1,2 3)')][st_geomFromWkt('LINESTRING(0 1,3 3)')]</arguments>
        <arguments resultID="106">[st_geomFromWkt('LINESTRING(0 1,2 3)')][st_makeBBox(0.0, 0.0, 4.0, 4.0)]</arguments>
        <arguments resultID="107">[st_makeBBox(0.0, 0.0, 3.0, 3.0)][st_makeBBox(2.0, 2.0, 4.0, 4.0)]</arguments>
        <arguments resultID="108">[null][null]</arguments>
    </case>
</testCase>
