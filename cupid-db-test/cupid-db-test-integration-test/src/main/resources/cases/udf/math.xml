<?xml version="1.0" encoding="utf-8" ?>

<!--  通用数学函数 测试用例  -->
<testCase>

    <resultXml>math_result.xml</resultXml>

    <!--  求普通对数，num >   log(base: Double, num: Double): Double  -->
    <case>
        <sql type="query">select log(?, ?);</sql>
        <arguments resultID="1">[2][2]</arguments>
        <arguments resultID="2">[2][4]</arguments>
        <arguments resultID="3">[0][2]</arguments>
        <arguments error="ClassCastException">[2][0]</arguments>
        <arguments error="ClassCastException">[2][-2]</arguments>
    </case>

    <!--  求π  PI()  -->
    <case>
        <sql type="query">select pi( );</sql>
        <arguments resultID="4"/>
    </case>

    <!--  求以2为底对数，num >   log2(num: Double): Double  -->
    <case>
        <sql type="query">select log2(?);</sql>
        <arguments resultID="5">[4]</arguments>
        <arguments error="ClassCastException">[0]</arguments>
        <arguments error="ClassCastException">[-1]</arguments>
    </case>

    <!--  求以1p为底对数，num >   log1p(num: Double): Double  -->
    <case>
        <sql type="query">select log1p(?);</sql>
        <arguments resultID="6">[1]</arguments>
        <arguments resultID="7">[0]</arguments>
        <arguments error="ClassCastException">[-1]</arguments>
    </case>

    <!--  求以e为底对数, num >   ln(num: Double): Double  -->
    <case>
        <sql type="query">select ln(?);</sql>
        <arguments resultID="8">[2.718281828459045]</arguments>
        <arguments error="ClassCastException">[0]</arguments>
        <arguments error="ClassCastException">[-1]</arguments>
        <arguments resultID="9">[null]</arguments>
    </case>

    <!--  求以10为底对数 ，num >   log10(num: Double): Double  -->
    <case>
        <sql type="query">select log10(?);</sql>
        <arguments resultID="10">[100.0]</arguments>
        <arguments error="ClassCastException">[0]</arguments>
        <arguments error="ClassCastException">[-1]</arguments>
        <arguments resultID="11">[null]</arguments>
    </case>

    <!--  绝对值  abs(num: Double): Double  -->
    <case>
        <sql type="query">select abs(?);</sql>
        <arguments resultID="12">[-100]</arguments>
        <arguments resultID="13">[0.0]</arguments>
        <arguments resultID="14">[100.123]</arguments>
        <arguments error="IllegalStateException">[null]</arguments>
    </case>

    <!--  向上取整  ceil(num: Double): Double  -->
    <case>
        <sql type="query">select ceil(?);</sql>
        <arguments resultID="15">[1.23]</arguments>
        <arguments resultID="16">[0.0]</arguments>
        <arguments resultID="17">[-1.23]</arguments>
        <arguments error="SQLException">[null]</arguments>
    </case>

    <!--  向下取整  floor(num: Double): Double  -->
    <case>
        <sql type="query">select floor(?);</sql>
        <arguments resultID="18">[12.34]</arguments>
        <arguments resultID="19">[0]</arguments>
        <arguments resultID="20">[-12.34]</arguments>
        <arguments error="SQLException">[null]</arguments>
    </case>

    <!--  保留小数位  round(num: Double[, precision:int]): Double  -->
    <case>
        <sql type="query">select round(?, ?);</sql>
        <arguments resultID="21">[123.456][1]</arguments>
        <arguments resultID="22">[123.456][0]</arguments>
        <arguments resultID="23">[123.456][4]</arguments>
        <arguments resultID="24">[123.456][-1]</arguments>
        <arguments resultID="25">[123.456][-3]</arguments>
        <arguments resultID="26">[123.456][-10]</arguments>
    </case>

    <!--  符号函数值  sign(num: Double): Integer  -->
    <case>
        <sql type="query">select sign(?);</sql>
        <arguments resultID="27">[-20]</arguments>
        <arguments resultID="28">[0]</arguments>
        <arguments resultID="29">[20]</arguments>
        <arguments error="IllegalStateException">[null]</arguments>
    </case>

    <!--  取模  mod(num1: Integer, num2: Integer): Integer  -->
    <case>
        <sql type="query">select mod(?, ?);</sql>
        <arguments resultID="30">[4][3]</arguments>
        <arguments resultID="31">[4][4]</arguments>
        <arguments resultID="32">[4][5]</arguments>
        <arguments resultID="33">[-4][3]</arguments>
        <arguments resultID="34">[-4][4]</arguments>
        <arguments resultID="35">[-4][5]</arguments>
        <arguments resultID="36">[0][-233]</arguments>
        <arguments resultID="37">[null][4]</arguments>
        <arguments error="IllegalStateException">[4][null]</arguments>
    </case>

    <!--  正弦值  sin(num: Double): Double  -->
    <case>
        <sql type="query">select sin(?);</sql>
        <arguments resultID="38">[1]</arguments>
        <arguments resultID="39">[0]</arguments>
        <arguments resultID="40">[-1]</arguments>
        <arguments resultID="41">[null]</arguments>
    </case>

    <!--  余弦值  cos(num: Double): Double  -->
    <case>
        <sql type="query">select cos(?);</sql>
        <arguments resultID="42">[1]</arguments>
        <arguments resultID="43">[0]</arguments>
        <arguments resultID="44">[-1]</arguments>
        <arguments resultID="45">[null]</arguments>
    </case>

    <!--  正切值  tan(num: Double): Double  -->
    <case>
        <sql type="query">select tan(?);</sql>
        <arguments resultID="46">[1]</arguments>
        <arguments resultID="47">[0]</arguments>
        <arguments resultID="48">[-1]</arguments>
        <arguments resultID="49">[null]</arguments>
    </case>

    <!--  余切值  cot(num: Double): Double  -->
    <case>
        <sql type="query">select cot(?);</sql>
        <arguments resultID="50">[1]</arguments>
        <arguments error="ClassCastException">[0]</arguments>
        <arguments resultID="51">[-1]</arguments>
        <arguments resultID="52">[null]</arguments>
    </case>

    <!--  反余弦值  acos(num: Double): Double  -->
    <case>
        <sql type="query">select acos(?);</sql>
        <arguments resultID="53">[1]</arguments>
        <arguments resultID="54">[0]</arguments>
        <arguments resultID="55">[-1]</arguments>
        <arguments resultID="56">[null]</arguments>
    </case>

    <!--  反正弦值  asin(num: Double): Double  -->
    <case>
        <sql type="query">select asin(?);</sql>
        <arguments resultID="57">[1]</arguments>
        <arguments resultID="58">[0]</arguments>
        <arguments resultID="59">[-1]</arguments>
        <arguments resultID="60">[null]</arguments>
    </case>

    <!--  算数平方根  sqrt(num：Double): Double  -->
    <case>
        <sql type="query">select sqrt(?);</sql>
        <arguments resultID="61">4.0</arguments>
        <arguments resultID="62">0</arguments>
        <arguments error="ClassCastException">-4.0</arguments>
        <arguments resultID="63">null</arguments>
    </case>

    <!--  指数  pow(base：Double, num：Double): Double  -->
    <case>
        <sql type="query">select pow(?,?);</sql>
        <arguments resultID="64">[2][2]</arguments>
        <arguments resultID="65">[2][0]</arguments>
        <arguments resultID="66">[2][-1]</arguments>
        <arguments resultID="67">[0][2]</arguments>
        <arguments resultID="68">[-2][2]</arguments>
        <arguments resultID="69">[-2][-2]</arguments>
    </case>

    <!--  角度转弧度  toRadians(num：Double): Double  -->
    <case>
        <sql type="query">select toRadians(?);</sql>
        <arguments resultID="70">[90]</arguments>
        <arguments resultID="71">[0]</arguments>
        <arguments resultID="72">[-90]</arguments>
    </case>

    <!--  弧度转角度  toDegrees(num：Double): Double  -->
    <case>
        <sql type="query">select toDegrees(?);</sql>
        <arguments resultID="73">[1]</arguments>
        <arguments resultID="74">[0]</arguments>
        <arguments resultID="75">[-1]</arguments>
    </case>

</testCase>