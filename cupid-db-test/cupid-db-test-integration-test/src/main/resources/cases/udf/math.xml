<?xml version="1.0" encoding="UTF-8"?>

<!--  通用数学函数 测试用例  -->
<testCase>
    <resultXml>math_result.xml</resultXml>
    <!--  求π  PI()  -->
    <case>
        <sql type="query" resultID="1">select pi( );</sql>
    </case>
    <!--  求普通对数，num >   log(base: Double, num: Double): Double  -->
    <case>
        <sql type="query">select log(?, ?);</sql>
        <arguments resultID="2">[2][4]</arguments>
        <arguments resultID="3">[0][0]</arguments>
        <arguments resultID="4">[-2][-2]</arguments>
        <arguments resultID="5">[1][2]</arguments>
        <arguments resultID="6">[null][null]</arguments>
    </case>
    <!--  求以2为底对数，num >   log2(num: Double): Double  -->
    <case>
        <sql type="query">select log2(?);</sql>
        <arguments resultID="7">[4]</arguments>
        <arguments resultID="8">[0]</arguments>
        <arguments resultID="9">[-4]</arguments>
        <arguments resultID="10">[null]</arguments>
    </case>
    <!--  求以10为底对数 ，num >   log10(num: Double): Double  -->
    <case>
        <sql type="query">select log10(?);</sql>
        <arguments resultID="11">[100.0]</arguments>
        <arguments resultID="12">[0]</arguments>
        <arguments resultID="13">[-1]</arguments>
        <arguments resultID="14">[null]</arguments>
    </case>
    <!--  求以e为底对数, num >   ln(num: Double): Double  -->
    <case>
        <sql type="query">select ln(?);</sql>
        <arguments resultID="15">[2.718281828459045]</arguments>
        <arguments resultID="16">[0]</arguments>
        <arguments resultID="17">[-1]</arguments>
        <arguments resultID="18">[null]</arguments>
    </case>
    <!--  求以1p为底对数，num >   log1p(num: Double): Double  -->
    <case>
        <sql type="query">select log1p(?);</sql>
        <arguments resultID="19">[0]</arguments>
        <arguments resultID="20">[-0.9]</arguments>
        <arguments resultID="21">[-1]</arguments>
        <arguments resultID="22">[null]</arguments>
    </case>
    <!--  绝对值  abs(num: Double): Double  -->
    <case>
        <sql type="query">select abs(?);</sql>
        <arguments resultID="23">[-100.0]</arguments>
        <arguments resultID="24">[0.0]</arguments>
        <arguments resultID="25">[100.0]</arguments>
        <arguments resultID="26">[null]</arguments>
    </case>
    <!--  向上取整  ceil(num: Double): Double  -->
    <case>
        <sql type="query">select ceil(?);</sql>
        <arguments resultID="27">[1.23]</arguments>
        <arguments resultID="28">[0.0]</arguments>
        <arguments resultID="29">[-1.23]</arguments>
        <arguments resultID="30">[null]</arguments>
    </case>
    <!--  向下取整  floor(num: Double): Double  -->
    <case>
        <sql type="query">select floor(?);</sql>
        <arguments resultID="31">[1.23]</arguments>
        <arguments resultID="32">[0]</arguments>
        <arguments resultID="33">[-1.23]</arguments>
        <arguments resultID="34">[null]</arguments>
    </case>
    <!--  保留小数位  round(num: Double[, precision:int]): Double  -->
    <case>
        <sql type="query">select round(?, ?);</sql>
        <arguments resultID="35">[123.456][1]</arguments>
        <arguments resultID="36">[123.456][0]</arguments>
        <arguments resultID="37">[123.456][4]</arguments>
        <arguments resultID="38">[123.456][-1]</arguments>
        <arguments resultID="39">[123.456][-3]</arguments>
        <arguments resultID="40">[123.456][null]</arguments>
    </case>
    <!--  符号函数值  sign(num: Double): Integer  -->
    <case>
        <sql type="query">select sign(?);</sql>
        <arguments resultID="41">[-20]</arguments>
        <arguments resultID="42">[0]</arguments>
        <arguments resultID="43">[20]</arguments>
        <arguments exception="IllegalStateException">[null]</arguments>
    </case>
    <!--  取模  mod(num1: Integer, num2: Integer): Integer  -->
    <case>
        <sql type="query">select mod(?, ?);</sql>
        <arguments resultID="44">[4][3]</arguments>
        <arguments resultID="45">[4][4]</arguments>
        <arguments resultID="46">[4][5]</arguments>
        <arguments resultID="47">[-4][3]</arguments>
        <arguments resultID="48">[-4][4]</arguments>
        <arguments resultID="49">[-4][5]</arguments>
        <arguments resultID="50">[0][-233]</arguments>
        <arguments resultID="51">[null][null]</arguments>
    </case>
    <!--  正弦值  sin(num: Double): Double  -->
    <case>
        <sql type="query">select sin(?);</sql>
        <arguments resultID="52">[1]</arguments>
        <arguments resultID="53">[0]</arguments>
        <arguments resultID="54">[-1]</arguments>
        <arguments resultID="55">[null]</arguments>
    </case>
    <!--  余弦值  cos(num: Double): Double  -->
    <case>
        <sql type="query">select cos(?);</sql>
        <arguments resultID="56">[1]</arguments>
        <arguments resultID="57">[0]</arguments>
        <arguments resultID="58">[-1]</arguments>
        <arguments resultID="59">[null]</arguments>
    </case>
    <!--  正切值  tan(num: Double): Double  -->
    <case>
        <sql type="query">select tan(?);</sql>
        <arguments resultID="60">[1]</arguments>
        <arguments resultID="61">[0]</arguments>
        <arguments resultID="62">[-1]</arguments>
        <arguments resultID="63">[null]</arguments>
    </case>
    <!--  余切值  cot(num: Double): Double  -->
    <case>
        <sql type="query">select cot(?);</sql>
        <arguments resultID="64">[1]</arguments>
        <arguments exception="ClassCastException">[0]</arguments>
        <arguments resultID="65">[-1]</arguments>
        <arguments resultID="66">[null]</arguments>
    </case>
    <!--  反余弦值  acos(num: Double): Double  -->
    <case>
        <sql type="query">select acos(?);</sql>
        <arguments resultID="67">[1]</arguments>
        <arguments resultID="68">[0]</arguments>
        <arguments resultID="69">[-1]</arguments>
        <arguments resultID="70">[null]</arguments>
    </case>
    <!--  反正弦值  asin(num: Double): Double  -->
    <case>
        <sql type="query">select asin(?);</sql>
        <arguments resultID="71">[1]</arguments>
        <arguments resultID="72">[0]</arguments>
        <arguments resultID="73">[-1]</arguments>
        <arguments resultID="74">[null]</arguments>
    </case>
    <!--  算数平方根  sqrt(num：Double): Double  -->
    <case>
        <sql type="query">select sqrt(?);</sql>
        <arguments resultID="75">4.0</arguments>
        <arguments resultID="76">0</arguments>
        <arguments exception="ClassCastException">-4.0</arguments>
        <arguments resultID="77">null</arguments>
    </case>
    <!--  立方根  sqrt(num：Double): Double  -->
    <case>
        <sql type="query">select cbrt(?);</sql>
        <arguments resultID="78">8.0</arguments>
        <arguments resultID="79">0</arguments>
        <arguments resultID="80">-8.0</arguments>
        <arguments resultID="81">null</arguments>
    </case>
    <!--  指数  pow(base：Double, num：Double): Double  -->
    <case>
        <sql type="query">select pow(?,?);</sql>
        <arguments resultID="82">[2][2]</arguments>
        <arguments resultID="83">[2][0]</arguments>
        <arguments resultID="84">[2][-1]</arguments>
        <arguments resultID="85">[0][2]</arguments>
        <arguments resultID="86">[-2][2]</arguments>
        <arguments resultID="87">[null][null]</arguments>
    </case>
    <!--  角度转弧度  toRadians(num：Double): Double  -->
    <case>
        <sql type="query">select toRadians(?);</sql>
        <arguments resultID="88">[90]</arguments>
        <arguments resultID="89">[0]</arguments>
        <arguments resultID="90">[-90]</arguments>
        <arguments resultID="91">[null]</arguments>
    </case>
    <!--  弧度转角度  toDegrees(num：Double): Double  -->
    <case>
        <sql type="query">select toDegrees(?);</sql>
        <arguments resultID="92">[1]</arguments>
        <arguments resultID="93">[0]</arguments>
        <arguments resultID="94">[-1]</arguments>
        <arguments resultID="95">[null]</arguments>
    </case>
</testCase>
