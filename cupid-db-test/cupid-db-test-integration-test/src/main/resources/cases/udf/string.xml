<?xml version="1.0" encoding="UTF-8"?>

<!--  通用字符串函数 测试用例  -->
<testCase>
    <resultXml>string_result.xml</resultXml>
    <!--  字符串翻转  reverse(s: String): String  -->
    <case>
        <sql type="query">select reverse(?);</sql>
        <arguments resultID="1">['cupid-db']</arguments>
        <arguments resultID="2">[null]</arguments>
    </case>
    <!--  将字符串转成大写  upper(s: String): String  -->
    <case>
        <sql type="query">select upper(?);</sql>
        <arguments resultID="3">['cupid-db']</arguments>
        <arguments exception="IllegalStateException">[null]</arguments>
    </case>
    <!--  将字符串转成小写  lower(s: String): String  -->
    <case>
        <sql type="query">select lower(?);</sql>
        <arguments resultID="4">['CUPID-db']</arguments>
        <arguments exception="IllegalStateException">[null]</arguments>
    </case>
    <!--  返回一个字符串在开始索引到结束索引之间的一个子集, 或从开始索引直到字符串的末尾的一个子集,cupid从1开始
            substring(s: String, cupid: Integer, len: Integer): String  -->
    <case>
        <sql type="query">select substring(?, ?, ?);</sql>
        <arguments resultID="5">['cupid-db'][1][5]</arguments>
        <arguments exception="SqlValidatorException">[null][null][null]</arguments>
    </case>
    <!--  字符串去除首尾空格  trim(s: String): String  -->
    <case>
        <sql type="query">select trim(?);</sql>
        <arguments resultID="6">[' cupid - db ']</arguments>
        <arguments resultID="7">[' ']</arguments>
        <arguments resultID="8">[null]</arguments>
    </case>
    <!--  字符串去除左边空格  ltrim(s: String): String  -->
    <case>
        <sql type="query">select ltrim(?);</sql>
        <arguments resultID="9">[' cupid - db ']</arguments>
        <arguments resultID="10">[null]</arguments>
    </case>
    <!--  字符串去除右边空格  rtrim(s: String): String  -->
    <case>
        <sql type="query">select rtrim(?);</sql>
        <arguments resultID="11">[' cupid - db ']</arguments>
        <arguments resultID="12">[null]</arguments>
    </case>
    <!--  字符串连接  concat(s1: String, s2: String): String  -->
    <case>
        <sql type="query">select concat(?, ?);</sql>
        <arguments resultID="13">['cupid']['-db']</arguments>
        <arguments resultID="14">[null][null]</arguments>
    </case>
    <!--  字符串左侧填充空格  lpad(str: String, len: Int): String  -->
    <case>
        <sql type="query">select lpad(?, ?);</sql>
        <arguments resultID="15">['cupid-db'][7]</arguments>
        <arguments resultID="ignore">[null][null]</arguments>
    </case>
    <!--  字符串左侧填充指定字符  lpad(str: String, len: Int, pad: String): String  -->
    <case>
        <sql type="query">select lpad(?, ?, ?);</sql>
        <arguments resultID="16">['cupid'][3]['db']</arguments>
        <arguments resultID="ignore">[null][null][null]</arguments>
    </case>
    <!--  字符串右侧填充空格  rpad(str: String, len: Int): String  -->
    <case>
        <sql type="query">select rpad(?, ?);</sql>
        <arguments resultID="17">['cupid-db'][7]</arguments>
        <arguments resultID="ignore">[null][null]</arguments>
    </case>
    <!--  字符串右侧填充指定字符  rpad(str: String, len: Int, pad: String): String  -->
    <case>
        <sql type="query">select rpad(?, ?, ?);</sql>
        <arguments resultID="18">['cupid'][3]['db']</arguments>
        <arguments resultID="ignore">[null][null][null]</arguments>
    </case>
    <!--  返回字符串占用的字节数  length(str: String): Int  一个中文占3个字节-->
    <case>
        <sql type="query">select length(?);</sql>
        <arguments resultID="19">['cupid-db']</arguments>
        <arguments resultID="20">[null]</arguments>
    </case>
    <!--  返回字符串的长度，一个多字节字符算作一个字符  charLength(str: String): Int  -->
    <case>
        <sql type="query">select charLength(?);</sql>
        <arguments resultID="21">['cupid-db']</arguments>
        <arguments resultID="22">[null]</arguments>
    </case>
    <!--  子串定位，返回子串第一次出现的位置(从1开始),如果没有找到返回0
        locate(substr: String, str: String): Int  -->
    <case>
        <sql type="query">select locate(?, ?);</sql>
        <arguments resultID="23">['db']['cupid-db']</arguments>
        <arguments resultID="24">['db']['cupid']</arguments>
        <arguments resultID="25">[null][null]</arguments>
    </case>
    <!--  子串定位，返回子串在第pos位置后第一次出现的位置（从1开始）,如果没有找到，返回0
        locate(substr: String, str: String, pos: Int): Int  -->
    <case>
        <sql type="query">select locate(?, ?, ?);</sql>
        <arguments resultID="26">['d']['cupid-db'][0]</arguments>
        <arguments resultID="27">['d']['cupid-db'][6]</arguments>
        <arguments resultID="ignore">[null][null][null]</arguments>
    </case>
    <!--  字符串转md5  md5(s: String): String  -->
    <case>
        <sql type="query">select md5(?);</sql>
        <arguments resultID="28">['123asdf@#-_+!?']</arguments>
        <arguments exception="NullPointerException">[null]</arguments>
    </case>
</testCase>
